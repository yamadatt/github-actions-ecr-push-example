name: Push To AWS ECR

on:
  push:
    branches:
      - main

env:
  # コミットのハッシュ。イメージに付与する。
  IMAGE_TAG: ${{ github.sha }}
  ECS_TASK_DEFINITION: h4b-ecs-task-definition
  CONTAINER_NAME: main

jobs:
  deploy:
    name: Push Image to AWS ECR
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          REPOSITORY_URL: ${{ secrets.ECR_REPOSITORY_URL }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        # dockerイメージのタグを複数付与し、まとめてPUSHする。latest運用を視野に入れてみる。
        # まとめてPUSHするために、push -aとしている。
        run: |
          docker build -t $REPOSITORY_URL:$IMAGE_TAG -t $REPOSITORY_URL:latest .
          docker push -a $REPOSITORY_URL
          echo "::set-output name=image-nginx::$ECR_REGISTRY/$REPOSITORY_URL:$IMAGE_TAG"


      - name: Fill in the new nginx image ID in the Amazon ECS task definition
        id: task-def-nginx
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          # task-def-phpで作成したtask-definition
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image-nginx }}